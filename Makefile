# Makefile
export PATH := $(PATH):$(HOME)/go/bin

include .env
export

APP_NAME=go-task-service
MAIN_FILE=cmd/main.go
MIGRATIONS_DIR=migrations
SEARCH_DIRS=./cmd,./internal
DOCS_DIR=internal/docs
LOG_PREFIX=[swagger]
DB_URL=postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/$(DB_NAME)?sslmode=disable
SEED_DIR=seed

.PHONY: help

run: ## –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
	go run $(MAIN_FILE)

seed-tasks: ## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á –≤ –±–∞–∑—É
	@echo "[seed] üöú –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É 'task' 1000 –∑–∞–ø–∏—Å—è–º–∏..."
	@psql $(DB_URL) -f $(SEED_DIR)/tasks.sql
	@echo "[seed] ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞."

migrate-reset:
	@echo "[migrate] üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é..."
	@VERSION_RAW=$$(migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" version 2>&1); \
	echo "[migrate] üßæ Raw output: $$VERSION_RAW"; \
	if echo "$$VERSION_RAW" | grep -qi dirty; then \
		VERSION=$$(echo "$$VERSION_RAW" | grep -oE '[0-9]+' | head -1); \
		echo "[migrate] ‚ö†Ô∏è –ë–∞–∑–∞ –≥—Ä—è–∑–Ω–∞—è –Ω–∞ –≤–µ—Ä—Å–∏–∏ $$VERSION, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º..."; \
		migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" force $$VERSION; \
		echo "[migrate] ‚úÖ Dirty-—Ñ–ª–∞–≥ —Å–Ω—è—Ç, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏."; \
	else \
		echo "[migrate] ‚úÖ –ë–∞–∑–∞ —á–∏—Å—Ç–∞—è, —Å–±—Ä–æ—Å –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."; \
	fi


swagger: check-swagger-deps check-annotations
	@echo "$(LOG_PREFIX) üî• –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
	@swag init -g $(MAIN_FILE) -d .
	@echo "$(LOG_PREFIX) ‚úÖ Swagger –≥–æ—Ç–æ–≤: http://localhost:8080/swagger/index.html"

clean-swagger:
	@echo "$(LOG_PREFIX) üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ Swagger-—Ñ–∞–π–ª—ã..."
	@rm -rf $(DOCS_DIR)
	@echo "$(LOG_PREFIX) üßº $(DOCS_DIR) –æ—á–∏—â–µ–Ω–æ."

check-swagger-deps:
	@test -f go.mod || (echo "$(LOG_PREFIX) ‚ùå –§–∞–π–ª go.mod –Ω–µ –Ω–∞–π–¥–µ–Ω!" && exit 1)
	@test -f $(MAIN_FILE) || (echo "$(LOG_PREFIX) ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω $(MAIN_FILE)!" && exit 1)
	@command -v swag >/dev/null || (echo "$(LOG_PREFIX) ‚ùå swag –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. go install github.com/swaggo/swag/cmd/swag@latest" && exit 1)

check-annotations:
	@grep -q "@title" $(MAIN_FILE) || (echo "$(LOG_PREFIX) ‚ö†Ô∏è –í $(MAIN_FILE) –Ω–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ @title" && exit 1)
	@grep -q "@version" $(MAIN_FILE) || (echo "$(LOG_PREFIX) ‚ö†Ô∏è –í $(MAIN_FILE) –Ω–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ @version" && exit 1)
	@grep -q "@description" $(MAIN_FILE) || (echo "$(LOG_PREFIX) ‚ö†Ô∏è –í $(MAIN_FILE) –Ω–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ @description" && exit 1)

swag: ## –ì–µ–Ω–µ—Ä–∞—Ü–∏—è swagger
	swag init -g cmd/main.go -d .

migrate-up: ## –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏
	migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" -verbose up

migrate-down:
	migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" down 1

migrate-force:
	migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" force 1

migrate-version:
	migrate -source file://$(MIGRATIONS_DIR) -database "$(DB_URL)" version

build:
	go build -o $(APP_NAME) $(MAIN_FILE)

clean:
	rm -f $(APP_NAME)
